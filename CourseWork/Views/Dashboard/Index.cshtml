@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["isDashboard"] = true; 
    var splineChartDataJson = ViewBag.SplineChartData;
    var doughnutChartDataJson = ViewBag.DoughnutChartData;
    var recentTransactions = ViewBag.RecentTransactions;
}


<div class="row mb-4">
    <div class="col-md-8 align-items-center">
        <div class="row">
            <div class="col-md-8 mb-5">
                <div class="d-flex flex-row widget summary income">
                    <div class="d-flex flex-column m-auto py-3">
                        <span class="lead fw-bold">Общие доходы:</span>
                    </div>
                    <div class="d-flex flex-column m-auto py-3">
                        <h1 class="display-6 fw-bold m-0">@ViewBag.TotalIncome &#8376;</h1>
                    </div>
                </div>
            </div>

            <div class="col-md-8 mb-5">
                <div class="d-flex flex-row widget summary expense">
                    <div class="d-flex flex-column m-auto py-3">
                        <span class="lead fw-bold">Общие расходы:</span>
                    </div>
                    <div class="d-flex flex-column m-auto py-3">
                        <h1 class="display-6 fw-bold m-0">@ViewBag.TotalExpense &#8376;</h1>
                    </div>
                </div>
            </div>

            <div class="col-md-8 mb-5">
                <div class="d-flex flex-row widget summary balance">
                    <div class="d-flex flex-column m-auto py-3">
                        <span class="lead fw-bold">Общий баланс:</span>
                    </div>
                    <div class="d-flex flex-column m-auto py-3">
                        <h1 class="display-6 fw-bold m-0">@ViewBag.Balance &#8376;</h1>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-md-4">
        <div class="widget chart">
            <div class="p-3">
                <h5 class="fw-bold">Расходы по категориям</h5>
            </div>
            <canvas id="myPieChart"></canvas>
        </div>
    </div>
</div>


<div class="row mb-4">
    <div class="col-md-6">
        <div class="widget chart">
            <div class="p-4">
                <h5 class="fw-bold">Доходы/Расходы</h5>
            </div>
            <canvas id="myChart" height="200"></canvas>
        </div>
    </div>
    <div class="col-md-6">
        <div class="widget">
            <div class="p-4">
                <h5 class="fw-bold">Последние транзакции</h5>
            </div>
            <div class="px-4 pb-4">
                <table class="table custom-table">
                    <thead>
                        <tr>
                            <th>Категория</th>
                            <th>Дата</th>
                            <th>Кол-во</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in recentTransactions)
                        {
                            <tr>
                                <td>@transaction.CategoryTitleWithIcon</td>
                                <td>@transaction.Date.ToString("MM-dd-yy")</td>
                                <td class="text-end">@transaction.FormattedAmount</td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>

<script>
    var splineChartData = @Html.Raw(splineChartDataJson);

    var days = splineChartData.map(data => data.day);
    var incomes = splineChartData.map(data => data.income);
    var expenses = splineChartData.map(data => data.expense);

    var ctx = document.getElementById('myChart').getContext('2d');

    var myChart = new Chart(ctx, {
        type: 'line', 
        data: {
            labels: days,
            datasets: [
                {
                    label: 'Income',
                    data: incomes,
                    backgroundColor: 'rgba(54, 162, 235, 0.2)',
                    borderColor: 'rgba(54, 162, 235, 1)',
                    borderWidth: 1
                },
                {
                    label: 'Expense',
                    data: expenses,
                    backgroundColor: 'rgba(255, 99, 132, 0.2)',
                    borderColor: 'rgba(255, 99, 132, 1)',
                    borderWidth: 1
                }
            ]
        },
        options: {
            scales: {
                y: {
                    beginAtZero: true
                }
            }
        }
    });
</script>
<script>
    // Получите данные из ViewBag и сконвертируйте в JavaScript-объект
    var doughnutChartData = @Html.Raw(Json.Serialize(ViewBag.DoughnutChartData));

    // Извлеките нужные данные для создания диаграммы
    var labels = doughnutChartData.map(function (item) {
        return item.categoryTitleWithIcon;
    });

    var data = doughnutChartData.map(function (item) {
        return item.amount;
    });

    var backgroundColors = [
        'rgba(255, 99, 132, 0.2)',
        'rgba(54, 162, 235, 0.2)',
        'rgba(255, 206, 86, 0.2)',
        'rgba(75, 192, 192, 0.2)',
        'rgba(153, 102, 255, 0.2)',
        'rgba(255, 159, 64, 0.2)',
        'rgba(199, 199, 199, 0.2)',
        // Добавьте дополнительные цвета по мере необходимости
    ];

    var borderColors = [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)',
        'rgba(199, 199, 199, 1)',
        // Добавьте соответствующие границы для каждого цвета
    ];

    // Создание круговой диаграммы
    var ctx = document.getElementById('myPieChart').getContext('2d');
    var myPieChart = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: labels,
            datasets: [{
                label: 'Amount',
                data: data,
                backgroundColor: backgroundColors,
                borderColor: borderColors,
                borderWidth: 1
            }]
        },
        options: {
            responsive: true,
            plugins: {
                legend: {
                    position: 'top',
                },
                title: {
                    display: true,
                    text: 'Expense Categories' // Заголовок диаграммы
                }
            }
        }
    });
</script>